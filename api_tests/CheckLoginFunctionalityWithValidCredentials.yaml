# ********RoostGPT********

# Test generated by RoostGPT for test lseg-integration using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=51ceaf2eef
# ROOST_METHOD_SIG_HASH=0526ac18c4
# 
#    ########## Scenario ##########  
# 
# {
#   background: null,
#   rule: null,
#   scenario: 'Check the Login Functionality with valid credentials\n' +
#     "Given the application login page is accessed via the endpoint '/login'\n" +
#     "When I send a POST request with valid 'Username' and 'Password'\n" +
#     'Then the response status should be 200\n' +
#     "And the response body should contain 'Login Successful'",
#   title: 'Check the Login Functionality with valid credentials'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  plugins:
    expect: {}
  payload:
    path: "./CheckLoginFunctionalityWithValidCredentials.csv"
    fields:
      - "Username"
      - "Password"
    skipHeader: true
  environments:
    staging:
      target: "{{ $processEnvironment.API_HOST }}"
      phases:
        - duration: 60
          arrivalRate: 5

scenarios:
  - name: "Check the Login Functionality with valid credentials"
    flow:
      # Hit the login page
      - get:
          url: "/login"
          # Assert that the login page is accessible with a 200 status code
          expect:
            - statusCode: 200
      - think: 1

      # Post valid credentials to login
      - post:
          # Use the login endpoint to login
          url: "/login"
          headers:
            username: "{{ Username }}"
            password: "{{ Password }}"
          expect:
            # Assert that the status code is 200
            - statusCode: 200
            # Check for 'message' property
            - hasProperty: 'msg'
            # Assert that the 'msg' property equals to 'Login Successful'
            - equals:
                - msg: "Login Successful"
          capture:
            # Capture the 'message' property
            - json: "$.msg"
              as: "responseMessage"
      - think: 1

      # Log the response message
      - log: "Logged in successfully with message - '{{ responseMessage }}'"
